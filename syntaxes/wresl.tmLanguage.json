{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "WRESL",
	"patterns": [
		{"include": "#define"},
		{"include": "#goal"},
		{"include": "#include"},
		{"include": "#var"},
		{"include": "#group"},
		{"include": "#model"},
		{"include": "#sequence"},
		{"include": "#alias"},
		{"include": "#parameters"},
		{"include": "#control"},
		{"include": "#constants"},
		{"include": "#strings"},
		{"include": "#comments"},
		{"include": "#characters"}
	],
	"repository": {
		"define": {
			"name": "meta.define.wresl",
			"match": "(?i)\\b(define)(\\[\\w+\\])?(\\(fm\\))?\\s*(\\w+)",
			"captures": {
				"1": {"name": "storage.type.define.wresl"},
				"2": {"name": "storage.modifier.scope.wresl"},
				"3": {"name": "constant.character.define.wresl"},
				"4": {"name": "entity.name.type.define.wresl"}
			}
		},
		"include": {
			"name": "meta.include.wresl",
			"match": "(?i)\\b(include)(\\[\\w+\\])?\\s*(group)?\\s*(\\w+)?",
			"captures": {
				"1": {"name": "keyword.control.include.wresl"},
				"2": {"name": "storage.modifier.scope.wresl"},
				"3": {"name": "keyword.other.includedgroup.wresl"},
				"4": {"name": "variable.parameter.includedgroup.wresl"}
			}
		},
		"goal": {
			"name": "meta.goal.wresl",
			"match": "(?i)\\b(goal)(\\[\\w+\\])?(\\(fm\\))?\\s*(\\w+)",
			"captures": {
				"1": {"name": "storage.type.goal.wresl"},
				"2": {"name": "storage.modifier.scope.wresl"},
				"3": {"name": "constant.character.define.wresl"},
				"4": {"name": "entity.name.type.define.wresl"}
			}
		},
		"group": {
			"name": "meta.group.wresl",
			"match": "(?i)\\b(group)\\s*(\\w+)",
			"captures": {
				"1": {"name": "storage.type.group.wresl"},
				"2": {"name": "entity.name.type.group.wresl"}
			}
		},
		"model": {
			"name": "meta.model.wresl",
			"match": "(?i)\\b(model)\\s*(\\w+)",
			"captures": {
				"1": {"name": "storage.type.model.wresl"},
				"2": {"name": "entity.name.type.model.wresl"}
			}
		},
		"sequence": {
			"name": "meta.sequence.wresl",
			"begin": "(?i)\\b(sequence)\\s*(\\w+)\\s*\\{",
			"end": "\\}",
			"beginCaptures": {
				"1": {"name": "storage.type.sequence.wresl"},
				"2": {"name": "entity.name.type.sequence.wresl"}
			},
			"patterns": [
				{"include": "#condition"},
				{"include": "#order"},
				{"include": "#model"}
			]
		},
		"condition":{
			"match": "(?i)\\b(condition)",
			"captures": {
				"1": {"name": "keyword.other.condition.wresl"}
			}
		},
		"order":{
			"match": "(?i)\\b(order)\\s*(\\d+)",
			"captures": {
				"1": {"name": "keyword.other.order.wresl"},
				"2": {"name": "constant.numeric.order.wresl"}
			}
		},
		"alias":{
			"match": "(?i)\\b(alias)\\s*(\\w+)(\\(\\$m.*\\))?",
			"captures": {
				"1": {"name": "keyword.other.define.alias.wresl"},
				"2": {"name": "variable.parameter.alias.wresl"},
				"3": {"name": "constant.character.futurearray.wresl"}
			}
		},
		"var": {
			"match": "(?i)\\b([ds]var)(\\(\\d+\\))?\\s*(\\w+)",
			"captures": {
				"1": {"name": "storage.type.var.wresl"},
				"2": {"name": "constant.numeric.var.wresl"},
				"3": {"name": "entity.name.type.var.wresl"}
			}
		},
		"control": {
			"patterns": [
				{
					"name": "meta.side.wresl",
					"match": "(?i)(lhs|rhs)",
					"captures": {
						"1": {"name": "keyword.control.side.wresl"}
					}
				},
				{
					"name": "meta.case.wresl",
					"begin": "(?i)(case)\\s*(\\w+)\\s*\\{",
					"end": "\\}",
					"beginCaptures": {
						"1": {"name": "keyword.control.case.wresl"},
						"2": {"name": "variable.parameter.case.wresl"}
					},
					"patterns": [
						{"include": "#condition"},
						{"include": "#control"},
						{"include": "#parameters"}
					]
				}
			]
		},
		"parameters": {
			"patterns": [
				{
					"name": "meta.value.wresl",
					"match": "(?i)\\b(value)\\s*(\\w+)(\\(\\$m\\))?",
					"captures": {
						"1": {"name": "keyword.other.value.wresl"},
						"2": {"name": "variable.parameter.value.wresl"},
						"3": {"name": "constant.character.futurearray.wresl"}
					}
				},
				{
					"name": "meta.timeseries.wresl",
					"match": "(?i)\\b(timeseries)\\b",
					"captures": {
						"1": {"name": "keyword.other.timeseries.wresl"}
					}
				},
				{
					"name": "meta.kind.wresl",
					"match": "(?i)\\b(kind)\\b",
					"captures": {
						"1": {"name": "keyword.other.kind.wresl"}
					}
				},
				{
					"name": "meta.units.wresl",
					"match": "(?i)\\b(units)\\b",
					"captures": {
						"1": {"name": "keyword.other.units.wresl"}
					}
				},
				{
					"name": "meta.specifiedbound.wresl",
					"match": "(?i)(upper|lower)\\s*(unbounded|\\d+\\.?\\d*)",
					"captures": {
						"1": {"name": "keyword.other.bound.wresl"},
						"2": {"name": "constant.numeric.bound.wresl"}
					}
				},
				{
					"name": "meta.stdbound.wresl",
					"match": "(?i)\\b(std)\\b",
					"captures": {
						"1": {"name": "constant.numeric.bound.wresl"}
					}
				},
				{
					"name": "meta.penalty.wresl",
					"match": "(?i)\\b(penalty)\\s*(\\d\\.?\\d*)",
					"captures": {
						"1": {"name": "keyword.other.penalty.wresl"},
						"2": {"name": "constant.numeric.penalty.wresl"}
					}
				}
			]	
		},
		"constants":{
			"name": "meta.constant.wresl",
			"patterns": [
				{
					"match": "(?i)(prev)?(oct|nov|dec|jan|feb|mar|apr|may|jun|jul|aug|sept)",
					"captures": {
						"1": {"name": "support.constant.previous.wresl"},
						"2": {"name": "support.constant.month.wresl"}
					}
				},
				{
					"match": "\\$m",
					"name": "constant.character.futurearray.wresl"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.wresl",
			"begin": "\"",
			"end": "\""
		},
		"characters": {
			"name": "string.quoted.single.wresl",
			"begin": "'",
			"end": "'"
		},
		"comments": {
			"name": "comment.wresl",
			"patterns": [
				{
					"name": "comment.line.exlamation.wresl",
					"begin": "!",
					"end": "\\n"
				},
				{
					"name": "comment.line.slash.wresl",
					"begin": "//",
					"end": "\\n"
				},
				{
					"name": "comment.block.wresl",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		}
	},
	"scopeName": "source.wresl"
}